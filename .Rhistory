fit <- lm(mpg ~ . -1, mtcars)
summary(fit)$coef
fit1 <- lm(mpg ~ wt, mtcars)
summary(fit1)$coef
fit1 <- lm(mpg ~ wt, mtcars)
summary(fit1)
fit2 <- lm(mpg ~ wt + cyl, mtcars)
summary(fit2)
vif(fit1, fit2)
fit3 <- lm(mpg ~ wt + disp, mtcars)
summary(fit3)
fit4 <- lm(mpg ~ wt + cyl + disp, mtcars)
summary(fit4)
fit5 <- lm(mpg ~ cyl, mtcars)
summary(fit5)
fit6 <- lm(mpg ~ disp, mtcars)
summary(fit6)
fit7 <- lm(mpg ~ hp, mtcars)
summary(fit7)
fit8 <- lm(mpg ~ wt + hp, mtcars)
summary(fit8)
fit2 <- lm(mpg ~ wt + cyl, mtcars)
summary(fit2)
fit8 <- lm(mpg ~ wt + hp, mtcars)
summary(fit8)
fit9 <- lm(mpg ~ wt + cyl + hp, mtcars)
summary(fit9)
fit10 <- lm(mpg ~ wt + cyl + drat + qsec + vs + am + carb + gear, mtcars)
summary(fit10)
fit10 <- lm(mpg ~ wt + cyl + drat + qsec + vs + am + carb, mtcars)
summary(fit10)
fit10 <- lm(mpg ~ wt + cyl + drat + qsec + vs + am, mtcars)
summary(fit10)
fit10 <- lm(mpg ~ wt + cyl + drat + qsec + vs, mtcars)
summary(fit10)
fit10 <- lm(mpg ~ wt + cyl + drat + qsec, mtcars)
summary(fit10)
fit10 <- lm(mpg ~ wt + cyl + drat, mtcars)
summary(fit10)
fit10 <- lm(mpg ~ wt + drat + vs, mtcars)
summary(fit10)
fit10 <- lm(mpg ~ wt + vs, mtcars)
summary(fit10)
fit10 <- lm(mpg ~ wt + vs + am, mtcars)
summary(fit10)
fit10 <- lm(mpg ~ wt + vs + carb, mtcars)
summary(fit10)
fit10 <- lm(mpg ~ wt + carb, mtcars)
summary(fit10)
fit10 <- lm(mpg ~ wt + vs + carb, mtcars)
summary(fit10)
fit10 <- lm(mpg ~ wt + vs + carb + gear, mtcars)
summary(fit10)
fit10 <- lm(mpg ~ wt, mtcars)
summary(fit10)
fit10 <- lm(mpg ~ wt + cyl, mtcars)
summary(fit10)
fit10 <- lm(mpg ~ wt + cyl + disp, mtcars)
summary(fit10)
fit10 <- lm(mpg ~ wt + cyl + hp, mtcars)
summary(fit10)
fit10 <- lm(mpg ~ wt + hp, mtcars)
summary(fit10)
fit10 <- lm(mpg ~ wt + cyl, mtcars)
summary(fit10)
fit10 <- lm(mpg ~ cyl + wt, mtcars)
summary(fit10)
plot(mtcars$mpg)
plot(mtcars$mpg, mtcars$wt)
plot(mtcars$mpg, mtcars$cyl)
plot(mtcars$mpg, mtcars$disp)
plot(mtcars$mpg, mtcars$hp)
vif(fit10)
library(fmsb)
install.packages("fmsb")
library(fmsb)
vif(fit10)
VIF(fit10)
pairs(mtcars$mpg, mtcars$am)
pairs(c(mtcars$mpg, mtcars$am))
?pairs
pairs(c(mpg,am), data=mtcars)
?cor
cor(c(mtcars$mpg, mtcars$am))
df <- mtcars$mpg
df$am <- mtcars$am
?data.frame
df <- as.dataframe(mtcars$mpg)
df <- c(mtcars$mpg, mtcars$am)
df
df <- mtcars[,c("mpg", "am")]
cor(df)
pairs(df)
plot(df)
fit <- lm(mpg ~ am, df)
summary(df)
fit2 <- glm(am ~ mpg, df, family="binary")
summary(fit2)
fit <- lm(mpg ~ am, df)
summary(df)
fit2 <- glm(am ~ mpg, df, family="binary")
summary(fit2)
fit <- lm(mpg ~ am, df)
summary(df)
fit2 <- glm(am ~ mpg, df, family="binary")
summary(fit2)
fit <- lm(mpg ~ am, df)
summary(fit)
fit2 <- glm(am ~ mpg, df, family="bernouli")
summary(fit2)
?glm
fit <- lm(mpg ~ am, df)
summary(fit)
fit2 <- glm(am ~ mpg, df, family="binomial")
summary(fit2)
library(corrplot)
install.packages("corrplot")
install.packages("corrplot")
library(corrplot)
cor <- cor(mtcars, use="pairwise", method="pearson")
cor <- cor(mtcars, use="pairwise", method="pearson")
ord <- order(cor[1,])
cor <- cor[ord, ord]
print(cor)
cor <- cor(mtcars, use="pairwise", method="pearson")
print(cor)
corrplot(cor, mar=c(0,0,1,0))
title(main="Pearson Correlation")
corrplot(cor, mar=c(0,0,4,0))
title(main="Pearson Correlation")
corrplot(cor, mar=c(0,0,3,0))
title(main="Pearson Correlation")
df <- mtcars
df$mpg <- log(df$mpg)
df$cyl <- log(df$cyl)
df$disp <- log(df$disp)
df$hp <- log(df$hp)
df$drat <- log(df$drat)
df$wt <- log(df$wt)
df$qsec <- log(df$qsec)
df$gear <- log(df$gear)
df$carb <- log(df$carb)
dfi$cyl <- df$cyl
dfi$disp <- df$disp
dfi$hp <- df$hp
dfi$drat <- df$drat
dfi$wt <- df$wt
dfi$qsec <- df$qsec
dfi$gear <- df$gear
dfi$carb <- df$carb
df <- mtcars
df$mpg <- log(df$mpg)
df$cyl <- log(df$cyl)
df$disp <- log(df$disp)
df$hp <- log(df$hp)
df$drat <- log(df$drat)
df$wt <- log(df$wt)
df$qsec <- log(df$qsec)
df$gear <- log(df$gear)
df$carb <- log(df$carb)
dfi <- df[,2:10]
head(dfi)
pc <- prcmp(dfi, scale=TRUE, center=TRUE, tol=0)
pc <- prcomp(dfi, scale=TRUE, center=TRUE, tol=0)
dfi <- df[,2:10]
pc <- prcomp(dfi, scale=TRUE, center=TRUE, tol=0)
## show output of PCA
pc
## summarise the importance of the components found
summary(pc)
## display plot showing relative importance
plot(pc, main="PCA Importance")
axis(1, at=seq(0.7, ncol(pc$rotation)*1.2, 1.2), labels=colnames(pc$rotation), lty=0)
biplot(pc, main="Principal Components mtcars")
pc2 <- prcomp(c(dfi$am, dfi$hp), scale=TRUE, center=TRUE, tol=0)
biplot(pc2, main="Principal Components Transmission and Horesepower")
dfi2 <- df[, c(4,9)]
pc2 <- prcomp(dfi2, scale=TRUE, center=TRUE, tol=0)
biplot(pc2, main="Principal Components Transmission and Horesepower")
fit <- lm(mpg ~ ., mtcars)
summary(fit)
fit <- glm(mpg ~ ., mtcars)
summary(fit)
VIF(fit)
mt <- mtcars[,c(4,9)]
fit <- lm(mpg ~ ., mt)
summary(fit)
VIF(fit)
mt <- mtcars[,c(4,9)]
fit <- lm(mpg ~ ., mt)
summary(fit)
VIF(fit)
mt <- mtcars[,c("mpg", "am", "hp")]
fit <- lm(mpg ~ ., mt)
summary(fit)
fit <- glm(mpg ~ ., mt)
summary(fit)
fit <- lm(mpg ~ ., mt)
summary(fit)
fit <- lm(mpg ~ ., dfi2)
summary(fit)
dfi2 <- df[, c(4,9)]
fit <- lm(mpg ~ ., dfi2)
summary(fit)
mt <- df[,c("mpg", "am", "hp")]
fit <- lm(mpg ~ ., dfi2)
summary(fit)
mt <- df[,c("mpg", "am", "hp")]
fit <- glm(mpg ~ ., dfi2)
summary(fit)
mt <- mtcars[,c("mpg", "am", "hp")]
fit <- glm(mpg ~ ., mt)
summary(fit)
mt <- mtcars[,c("mpg", "am", "hp")]
fit <- lm(mpg ~ ., mt)
summary(fit)
mt <- df[,c("mpg", "am", "hp")]
fit <- lm(mpg ~ ., mt)
summary(fit)
mt <- mtcars[,c("mpg", "am", "hp")]
fit <- lm(mpg ~ ., mt)
summary(fit)
plot(fit)
?glm
mt <- mtcars[,c("mpg", "am", "hp")]
fit <- glm(mpg ~ ., mt, family="gaussian")
summary(fit)
plot(fit)
mt <- df[,c("mpg", "am", "hp")]
fit <- glm(mpg ~ ., mt, family="gaussian")
summary(fit)
plot(fit)
VIF(fit)
mt <- mtcars[,c("mpg", "am", "hp")]
fit <- glm(mpg ~ ., mt, family="gaussian")
summary(fit)
influence.measures(mtcars)
boxplot(mtcars$mpg ~ mtcars$am, data = mtcars, outpch = 19, ylab="mpg:miles per
gallon",xlab="transmission type",main="mpg vs transmission type", col="blue")
boxplot(mtcars$mpg ~ mtcars$am, data = mtcars, outpch = 19, ylab="mpg:miles per
gallon",xlab="auomtatic = 0, manual = 1",main="mpg vs transmission type", col="blue")
## density distribution of mpg
library(ggplot2)
ggplot(data = mtcars, aes(x=mtcars$mpg)) +
geom_density(fill="blue", alpha=.23) +
labs(x="mpg", y="probability density", title="density distribution") +
geom_vline(aes(xintercept=mean(mtcars$mpg)), col="red", lwd=1.5)
library(ggplot2)
ggplot(data = mtcars, aes(x=log(mtcars$mpg))) +
geom_density(fill="blue", alpha=.23) +
labs(x="log(mpg)", y="probability density", title="density distribution") +
geom_vline(aes(xintercept=mean(log(mtcars$mpg))), col="red", lwd=1.5)
par(mfrow=c(1,2))
library(ggplot2)
ggplot(data = mtcars, aes(x=mtcars$mpg)) +
geom_density(fill="blue", alpha=.23) +
labs(x="mpg", y="probability density", title="density distribution") +
geom_vline(aes(xintercept=mean(mtcars$mpg)), col="red", lwd=1.5)
## density distribution of log(mpg)
ggplot(data = mtcars, aes(x=log(mtcars$mpg))) +
geom_density(fill="blue", alpha=.23) +
labs(x="log(mpg)", y="probability density", title="density distribution") +
geom_vline(aes(xintercept=mean(log(mtcars$mpg))), col="red", lwd=1.5)
par(mfrow=c(1,2))
ggplot(data = mtcars, aes(x=mtcars$mpg)) +
geom_density(fill="blue", alpha=.23) +
labs(x="mpg", y="probability density", title="density distribution") +
geom_vline(aes(xintercept=mean(mtcars$mpg)), col="red", lwd=1.5)
par(mfrow=c(2,1))
ggplot(data = mtcars, aes(x=mtcars$mpg)) +
geom_density(fill="blue", alpha=.23) +
labs(x="mpg", y="probability density", title="density distribution") +
geom_vline(aes(xintercept=mean(mtcars$mpg)), col="red", lwd=1.5)
## density distribution of log(mpg)
ggplot(data = mtcars, aes(x=log(mtcars$mpg))) +
geom_density(fill="blue", alpha=.23) +
labs(x="log(mpg)", y="probability density", title="density distribution") +
geom_vline(aes(xintercept=mean(log(mtcars$mpg))), col="red", lwd=1.5)
?glm
par(mfrow=c(1,2))
ggplot(data = mtcars, aes(x=mtcars$mpg)) +
geom_density(fill="blue", alpha=.23) +
labs(x="mpg", y="probability density", title="density distribution") +
geom_vline(aes(xintercept=mean(mtcars$mpg)), col="red", lwd=1.5)
ggplot(data = mtcars, aes(x=log(mtcars$mpg))) +
geom_density(fill="blue", alpha=.23) +
labs(x="log(mpg)", y="probability density", title="density distribution") +
geom_vline(aes(xintercept=mean(log(mtcars$mpg))), col="red", lwd=1.5)
install.packages("gridextra")
install.packages("gridExtra")
library(gridExtra)
plot1 <- ggplot(data = mtcars, aes(x=mtcars$mpg)) +
geom_density(fill="blue", alpha=.23) +
labs(x="mpg", y="probability density", title="density distribution") +
geom_vline(aes(xintercept=mean(mtcars$mpg)), col="red", lwd=1.5)
plot2 <- ggplot(data = mtcars, aes(x=log(mtcars$mpg))) +
geom_density(fill="blue", alpha=.23) +
labs(x="log(mpg)", y="probability density", title="density distribution") +
geom_vline(aes(xintercept=mean(log(mtcars$mpg))), col="red", lwd=1.5)
grid.arrange(plot1, plot2, col=2)
plot1 <- ggplot(data = mtcars, aes(x=mtcars$mpg)) +
geom_density(fill="blue", alpha=.23) +
labs(x="mpg", y="probability density", title="density distribution") +
geom_vline(aes(xintercept=mean(mtcars$mpg)), col="red", lwd=1.5)
plot2 <- ggplot(data = mtcars, aes(x=log(mtcars$mpg))) +
geom_density(fill="blue", alpha=.23) +
labs(x="log(mpg)", y="probability density", title="density distribution") +
geom_vline(aes(xintercept=mean(log(mtcars$mpg))), col="red", lwd=1.5)
grid.arrange(plot1, plot2, ncol=2)
stepmodel = step(lm(data = mtcars, mpg ~ .),trace=0,steps=10000)
summary(stepmodel)
stepmodel = step(lm(data = df, mpg ~ .),trace=0,steps=10000)
summary(stepmodel)
afit <- lm(mpg ~ am, df[df$am=0,])
afit <- lm(mpg ~ am, df[df$am==0,])
summary(afit)
df0 <- df[df$am==0,]
df0
df1 <- df[df$am==1,]
df1
mt0 <- mtcars[mtcars$am==0,]
df0
mt1 <- mtcars[mtcars$am==1,]
mt1
mt0 <- mtcars[mtcars$am==0,]
mf0
mt0 <- mtcars[mtcars$am==0,]
mt0
mt1 <- mtcars[mtcars$am==1,]
mt1
fit0 <- lm(mpg ~ am, mt0)
summary(fit0)
mean(mt0)
mean(mt0$mpg)
mean(mt0$mpg)
mean(mt1$mpg)
test(mtcars$mpg~mtcars$am,conf.level=0.95)
t.test(mtcars$mpg~mtcars$am,conf.level=0.95)
mt <- mtcars[,c("mpg", "am", "hp")]
fit <- glm(mpg ~ ., mt, family="gaussian")
summary(fit)
plot(fit)
fit <- glm(mpg ~ ., mt, family="gaussian")
summary(fit)
mt <- mtcars[,c("mpg", "am", "wt")]
fit <- glm(mpg ~ ., mt, family="gaussian")
summary(fit)
mt <- mtcars[,c("mpg", "wt", "am")]
fit <- glm(mpg ~ ., mt, family="gaussian")
summary(fit)
shapiro.test(fit$residuals)
mt <- mtcars[,c("mpg", "am", "hp")]
fit <- glm(mpg ~ ., mt, family="gaussian")
summary(fit)
mt <- mtcars[,c("mpg", "hp", "am")]
fit <- glm(mpg ~ ., mt, family="gaussian")
summary(fit)
shapiro.test(fit$residuals)
mt <- mtcars[,c("mpg", "am", "hp")]
fit <- glm(mpg ~ ., mt, family="gaussian")
plot(fit)
stepmodel = step(lm(data = df, mpg ~ .),trace=0,steps=10000)
summary(stepmodel)
plot(stepmodel)
plot(stepmodel)
model <- lm(mpg~ factor(am):wt + factor(am):qsec,data=mtcars)
summary(model)
plot(model)
shapiro.test(model$residuals)
?influence.measures
model <- lm(mpg~ factor(am):wt + factor(am):qsec,data=mtcars)
summary(model)
influence.measures(model)
outlierTest(model) # Bonferonni p-value for most extreme obs
qqPlot(model, main="QQ Plot") #qq plot for studentized resid
leveragePlots(model) # leverage plots
?outliertest
?outlierTest
??outliertest
install.packages("car")
library(car)
outlierTest(model) # Bonferonni p-value for most extreme obs
qqplot(model, main="QQ Plot") #qq plot for studentized resid
leveragePlots(model) # leverage plots
outlierTest(model) # Bonferonni p-value for most extreme obs
qqplot(model) #qq plot for studentized resid
?qqplot
qqplot(,model) #qq plot for studentized resid
fit <- lm(mpg ~ am + hp, df)
summary(fit)
df <- mtcars
df$mpg <- log(df$mpg)
df$cyl <- log(df$cyl)
df$disp <- log(df$disp)
df$hp <- log(df$hp)
df$drat <- log(df$drat)
df$wt <- log(df$wt)
df$qsec <- log(df$qsec)
df$gear <- log(df$gear)
df$carb <- log(df$carb)
fit <- lm(mpg ~ am, df)
summary(fit)
plot(df$mpg, df$am)
plot(df$mpg, df$am, color = df$am)
plot(df$mpg, df$am, col = df$am)
warnings()
?plot
plot(df$mpg, df$am, col="red")
plot(df$mpg, df$am, col="am")
plot(df$mpg, df$am, col=df$am)
fit <- lm(mpg ~ am, df)
summary(fit)
mt <- mtcars[,c("mpg", "am", "hp")]
fit <- lm(mpg ~ am + hp, df)
summary(fit)
plot(fit)
fit <- lm(mpg ~ am + hp, mtcars)
summary(fit)
model <- glm(mpg~ factor(am):wt + factor(am):qsec,data=mtcars, family = "gaussian")
summary(model)
model <- glm(mpg~ factor(am):wt, data=mtcars, family = "gaussian")
summary(model)
model <- lm(mpg~ factor(am):wt, data=mtcars)
summary(model)
factor(am):wt
factor(mtcars$am):wt
factor(mtcars$am):mtcars$wt
model <- lm(mpg~ factor(am):wt, data=mtcars)
summary(model)
plot(model)
model <- glm(mpg~ factor(am):wt + factor(am):qsec,data=mtcars, family = "gaussian")
summary(model)
plot(mtcars$mpg, mtcars$wt)
plot(mtcars$wt, mtcars$am)
par(mfrow=c(1,4))
plot(mtcars$mpg, mtcars$wt)
plot(mtcars$wt, mtcars$am)
par(mfrow=c(2,2))
plot(mtcars$mpg, mtcars$wt)
plot(mtcars$wt, mtcars$am)
par(mfrow=c(2,2))
plot(mtcars$mpg, mtcars$wt)
plot(mtcars$wt, mtcars$am)
plot(mtcars$qsec, mtcars$am)
par(mfrow=c(2,2))
plot(mtcars$mpg, mtcars$wt)
plot(mtcars$wt, mtcars$am)
plot(mtcars$qsec, mtcars$am)
plot(mtcars$qsec, mtcars$wt)
par(mfrow=c(1,1))
plot(mtcars$qsec, mtcars$wt)
plot(df$qsec, df$wt)
par(mfrow=c(2,2))
plot(df$mpg, df$wt)
plot(df$wt, df$am)
plot(df$qsec, df$am)
plot(df$qsec, df$wt)
par(mfrow=c(1,1))
plot(df$mpg, dfam)
plot(df$mpg, df$wt)
plot(df$wt, df$am)
plot(df$qsec, df$am)
plot(df$qsec, df$wt)
plot(df$mpg, df$am)
plot(df$mpg, df$qsec)
abline(x=mean(df$qsec))
abline(lm(mpg ~ qsec, data=df), col="red")
par(mfrow=c(1,2))
plot(df$mpg, df$am)
abline(lm(mpg ~ am, data=df), col="red")
plot(df$mpg, df$wt)
abline(lm(mpg ~ wt, data=df), col="red")
plot(df$mpg, df$am)
abline(lm(mpg ~ am, data=df), col="red")
par(mfrow=c(1,1))
plot(df$wt, df$am)
abline(lm(wt ~ am, data=df), col="red")
plot(df$mpg, df$am)
abline(lm(mpg ~ am, data=df), col="red")
plot(df$qsec, df$am)
abline(lm(qsec ~ am, data=df), col="red")
plot(df$qsec, df$wt)
abline(lm(qsec ~ am, data=df), col="red")
plot(df$qsec, df$wt)
abline(lm(qsec ~ wt, data=df), col="red")
it <- lm(qsec ~ wt, data=df)
fit <- lm(qsec ~ wt, data=df)
plot(fit)
abline(lm(mpg ~ wt, data=df), col="red")
plot(df$mpg, df$qsec)
plot(df$mpg, df$qsec)
abline(lm(mpg ~ qsec, data=df), col="red")
plot(df$mpg, df$wt)
abline(lm(mpg ~ wt, data=df), col="red")
plot(df$wt, df$am)
abline(lm(wt ~ am, data=df), col="red")
?t.test
getwd()
setwd("~/desktop/coursera/assignments/quantifiedSelfMovement")
setwd("~/desktop/coursera/assignments/quantifySelfMovement")
ls
setwd("~/desktop/coursera/assignments/quantifySelfMovement")
library("rattle")
library(rattle)
install.packages("rattle")
library(rattle)
library("rattle")
install.packages("rattle")
library(rattle)
library(installr)
install.packages("installr")
library(installr)
